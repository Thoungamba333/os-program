Q10a>cat command
/program to implement the cat command which prints the content of the file/
//simulate CAT cmd (VIEW only)
#include<stdio.h>
#include<stdlib.h>
void main(int argc, char *argv[])
{
FILE *fp;
char ch;
if(argc<2)
{
printf("File not entered");
exit(1);
}
fp=fopen(argv[1],"r");
if(fp==NULL)
{
printf("File does not exist\n");
exit(1);
}
while((ch=fgetc(fp))!=EOF)
printf("%c",ch);
fclose(fp);
printf("\n");
}
//./a.out filename

and
//simulate cat cmd (cat >> f1 f2)
#include<stdio.h>
#include<stdlib.h>
void main(int argc, char *argv[])
{
FILE *fp1,*fp2;
char ch;
if(argc<3)
{
printf("insufficient no. of arguments\n");
exit(1);
}
fp1=fopen(argv[1],"a");
fp2=fopen(argv[2],"r");
if(fp2==NULL)
{
printf("Error in opening file\n");
exit(1);
}
while((ch=fgetc(fp2))!=EOF)
fprintf(fp1,"%c",ch);
fclose(fp1);
fclose(fp2);
}

Q10b>prime no. with requirements

#include <stdlib.h> 
#include <stdio.h> 
#include <string.h> 
#include <unistd.h> 
#include <sys/shm.h> 
#include <fcntl.h> 
#include <sys/mman.h>

int main(int argc, char *argv[]) {
    int m, n, i, j, flag = 0;
    int shmfd = shm_open("OS", O_RDWR, 0666);
    const int size = 4096;
    void *ptr = mmap(0, size, PROT_READ | PROT_WRITE, MAP_SHARED, shmfd, 0);

    if (argc != 3) {
        printf("Usage: %s <m> <n>\n", argv[0]);
         return 1;
    }

    sscanf(argv[1], "%d", &m);
    sscanf(argv[2], "%d", &n);

    if (m < 1 || n < 1) {
        printf("Invalid input: m and n must be positive integers.\n");
        return 1;
    }

    if (m > n) {
        int temp = m;
        m = n;
        n = temp;
    }

    char buffer[128];  // Buffer to store prime numbers as strings

    for (i = m; i <= n; i++) {
        flag = 0;
        for (j = 2; j <= i/2; j++) {
            if (i % j == 0) {
                flag = 1;
                break;
            }
        }
        if (flag == 0) {
            sprintf(buffer, "%d", i);
            strcat(ptr, buffer);
            strcat(ptr, " ");
        }
    }

    return 0;
}
